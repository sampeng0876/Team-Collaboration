from tkinter import *
from tkcalendar import *
import datetime as dt

root = Tk()
root.title("Appointment Scheduler")
root.geometry("500x500")

# create a list of available times
# available_time = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00']
available_time = [f'{i:02}:00' for i in range(24)]
# create a calendar picker
cal = Calendar(root, selectmode="day", year=2023, month=5, day=9)
cal.grid(column=1, row=0, padx=10, pady=5)

# create labels and dropdowns for start and end times
Label(root, text="Start Time: ").grid(column=0, row=1, padx=10, pady=5)
start_time_var = StringVar(root)
start_time_var.set("Select Start Time")
start_time_dropdown = OptionMenu(root, start_time_var, *available_time)
start_time_dropdown.grid(column=1, row=1, padx=10, pady=5)

Label(root, text="End Time: ").grid(column=0, row=2, padx=10, pady=5)
end_time_var = StringVar(root)
end_time_var.set("Select End Time")
end_time_dropdown = OptionMenu(root, end_time_var, *available_time)
end_time_dropdown.grid(column=1, row=2, padx=10, pady=5)

# function to check if selected range of time is available in the available_time list


def check_availability():
    available_slots = ['03:00','04:00','05:00','14:00','15:00','18:00','19:00','20:00']
    start_time = start_time_var.get()
    end_time = end_time_var.get()
    start_index = available_time.index(start_time)
    end_index = available_time.index(end_time)
    while True:
        if all([available_time[i] in available_slots for i in range(start_index, end_index)]):
            # All time slots in range are available
            available_slot = available_time[start_index]
            print(f"Successfully Booked: {available_slot}")
            break
        else:
            # Wait and check again
            now = dt.datetime.now()
            print(f"Checking again at {now.strftime('%H:%M:%S')}")
            available_slots = [time for time in available_time if time not in booked_slots]
            root.after(5000, check_availability)
            root.mainloop()

# function to handle submit button click
def submit():
    check_availability()

# create submit button
submit_button = Button(root, text="Submit", command=submit)
submit_button.grid(column=1, row=3, padx=10, pady=5)

# initialize booked_slots list
booked_slots = []

root.mainloop()
